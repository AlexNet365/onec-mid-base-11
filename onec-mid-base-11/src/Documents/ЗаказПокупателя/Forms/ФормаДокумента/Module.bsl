
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Асинх Процедура ПересчитатьТаблицу(Команда)
	
	Если АР_ПроверкаНеобходимостиПрименимостиСкидки() = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = "Пересчитать таблицы товаров и услуг??";        
    ОтветПользователя = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
	Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	АР_ПересчетСУчетомСкидки();

КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * (100 - Объект.СогласованнаяСкидка) / 100;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура АР_ПересчетСУчетомСкидки()
	
	Для Каждого СтрокаТоваров Из Объект.Товары Цикл
		СтрокаТоваров.Сумма = СтрокаТоваров.Цена * СтрокаТоваров.Количество * (100 - Объект.СогласованнаяСкидка) / 100;  
	КонецЦикла;	
	
	Для Каждого СтрокаУслуг Из Объект.Услуги Цикл
		СтрокаУслуг.Сумма = СтрокаУслуг.Цена * СтрокаУслуг.Количество * (100 - Объект.СогласованнаяСкидка) / 100;  
	КонецЦикла;	
	
	РассчитатьСуммуДокумента();

КонецПроцедуры

&НаКлиенте
Асинх Процедура АР_СогласованнаяСкидкаПриИзмененииПосле(Элемент)
	
	Если Объект.СогласованнаяСкидка < 0 ИЛИ Объект.СогласованнаяСкидка > 100 Тогда    
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Скидка должна быть в диапазоне от 0 до 100 %";
		Сообщение.Поле = "Объект.СогласованнаяСкидка";
		Сообщение.Сообщить();
		
		Возврат; 
		
	КонецЕсли;
	
	ТекстВопроса = "Изменён процент скидки. Пересчитать таблицы товаров и услуг?";        
    ОтветПользователя = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
	Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
		АР_ПересчетСУчетомСкидки();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция АР_ПроверкаНеобходимостиПрименимостиСкидки()
	
	Индикатор = Ложь;
	
	Для Каждого СтрокаТоваров Из Объект.Товары Цикл    
		
		Если СтрокаТоваров.Сумма <> СтрокаТоваров.Цена * СтрокаТоваров.Количество * (100 - Объект.СогласованнаяСкидка) / 100 Тогда
			Индикатор = Истина;
			Прервать;
			Возврат Индикатор;
		КонецЕсли;
		
	КонецЦикла;	
	
	Для Каждого СтрокаУслуг Из Объект.Услуги Цикл    
		
		Если СтрокаУслуг.Сумма <> СтрокаУслуг.Цена * СтрокаУслуг.Количество * (100 - Объект.СогласованнаяСкидка) / 100 Тогда
			Индикатор = Истина;
			Прервать;
			Возврат Индикатор;
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат Индикатор;
    
КонецФункции

#КонецОбласти

#КонецОбласти
